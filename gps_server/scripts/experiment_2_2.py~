#!/usr/bin/env python

import rospy, os, sys
#from sound_play.msg import SoundRequest
#from sound_play.libsoundplay import SoundClient

import baxter_interface.digital_io as DIO
import baxter_interface
from baxter_interface import CHECK_VERSION

import argparse

import cv2
import cv_bridge

from sensor_msgs.msg import (
    Image,
)

def sleep(t):
    try:
        rospy.sleep(t)
    except KeyboardInterrupt:
        sys.exit()
    except:
        pass



def mainLoop():

    #set up our variables
    b=DIO.DigitalIO('torso_right_button_ok');
    r=rospy.Rate(10);
    #soundhandle = SoundClient()
    notDone = 1
    count = 0

    #for the robot's display
    pub = rospy.Publisher('/robot/xdisplay', Image, latch=True, queue_size=1)
    img = cv2.imread("/home/turtlebot/ros_ws/src/baxter_examples/share/images/comm_dep_faces/comm_dep_baxter_4_happy2.png")
    happyFace = cv_bridge.CvBridge().cv2_to_imgmsg(img, encoding="bgr8")
    img = cv2.imread("/home/turtlebot/ros_ws/src/baxter_examples/share/images/comm_dep_faces/comm_dep_baxter_3_neutral2.png")
    neutralFace = cv_bridge.CvBridge().cv2_to_imgmsg(img, encoding="bgr8")
  
    #define right arm poses
    rightArmPose0 = {'right_s0': 0.9119515783978784, 'right_s1': -0.9944030457467194, 'right_w0': -0.05905826033358843, 'right_w1': -1.1155875279896672, 'right_w2': 0.046402918833533764, 'right_e0': -0.18331070415230694, 'right_e1': 2.5947285027081772}

    rightArmPose1 = {'right_s0': 0.5150340495325276, 'right_s1': -0.9921020745648913, 'right_w0': -0.692208830533293, 'right_w1': -1.0730195611258468, 'right_w2': 0.3236699462438223, 'right_e0': -0.27765052260725986, 'right_e1': 2.398762457055816}

    rightArmPose2 = {'right_s0': 0.8298836062460089, 'right_s1': -0.882038953034113, 'right_w0': -0.09855826562163783, 'right_w1': -1.1593059804444015, 'right_w2': 0.11850001586414821, 'right_e0': -0.13307283334905964, 'right_e1': 2.2626216621309854}

    rightArmPose3 = {'right_s0': 1.1309273358685212, 'right_s1': -0.8383205005793786, 'right_w0': 0.04065049087896346, 'right_w1': -0.8237476830944672, 'right_w2': 0.1829272089553356, 'right_e0': -0.22204371904641365, 'right_e1': 1.9742332740085275}

    rightArmPose4 = {'right_s0': 0.7988204952913293, 'right_s1': -0.7869321441852173, 'right_w0': -0.15915050674311168, 'right_w1': -0.7723593267003058, 'right_w2': 0.1257864246066039, 'right_e0': -0.09740778003072377, 'right_e1': 1.7567914973257701}

    rightArmPose5 = {'right_s0': 0.7535680620487095, 'right_s1': -0.5971020216843973, 'right_w0': -0.1292378813793461, 'right_w1': -0.27228158984966094, 'right_w2': 0.059825250727531136, 'right_e0': -0.004218447166684887, 'right_e1': 1.3721458147635026}

    leftArmNeutralPose = {'left_w0': -0.09894176081860918, 'left_w1': -0.31101460474376763, 'left_w2': 0.04410194765170564, 'left_e0': 0.056373793954788955, 'left_e1': 2.578238209238409, 'left_s0': -0.8762865250795426, 'left_s1': -1.0143447959892298}


    limb_right = baxter_interface.Limb('right')
    angles = limb_right.joint_angles()
    print angles

    limb_left = baxter_interface.Limb('left')
    angles = limb_left.joint_angles()
    print angles

    right_gripper = baxter_interface.Gripper('right', CHECK_VERSION)
    s = '0'

    #set up robot's initial state just in case
    #pub.publish(neutralFace)
    pub.publish(happyFace)
    sleep(1)
    baxter_interface.Head().set_pan(0.0)
    sleep(1)
    limb_right.move_to_joint_positions(rightArmPose0)
    sleep(5)
    limb_left.move_to_joint_positions(leftArmNeutralPose)
    sleep(5)
    right_gripper.calibrate()
    sleep(3)

 
    #start main loop
    while (not rospy.is_shutdown()):
      #wait until the table has sent us a message
      #while ((not rospy.is_shutdown()) and (s[0]=='0')):
      #  print '.'
      #  r.sleep()
      #  f=open('/home/turtlebot/messagesFromTable','r')
      #  s=f.read()
      #  f.close()

      while ((not rospy.is_shutdown()) and (b.state==0)):
        print '.'
        r.sleep()

      if (not rospy.is_shutdown()):
        print 'reaching motion 1'
        
        right_gripper.open()
        sleep(2)

        #sleep(1)
        limb_right.move_to_joint_positions(rightArmPose0)
        sleep(1)
        limb_right.move_to_joint_positions(rightArmPose1)
        sleep(1)
        limb_right.move_to_joint_positions(rightArmPose2)
        sleep(1)
        limb_right.move_to_joint_positions(rightArmPose3)
        sleep(1)
        limb_right.move_to_joint_positions(rightArmPose4)
        sleep(1)
        limb_right.move_to_joint_positions(rightArmPose5)
        sleep(5)

        #soundhandle.say('hello, would you like some ice cream?')

        right_gripper.close()
        sleep(2)

        #limb.move_to_joint_positions(rightArmFrontOfferingPose)
        #sleep(2)
        #soundhandle.say('please take it')
        #sleep(1)
        #right_gripper.open()
        #sleep(2)

        #soundhandle.say('bye bye')
        #sleep(1)
        #pub.publish(neutralFace)
        #limb.move_to_joint_positions(rightArmSidePose)
        #sleep(3)

        

        #right_gripper.open()
        #sleep(3)
        #right_gripper.close()
        #sleep(3)
        '''
        
        sleep(1)
        soundhandle.say(s)
        #soundhandle.playWave('/home/turtlebot/Desktop/baxter_aug_event/hello.wav')
        #sleep(2)
        limb.move_to_joint_positions(rightArmUpALittlePose)
        sleep(3)

      if (not rospy.is_shutdown()):
        print 'get a bag'
        baxter_interface.Head().set_pan(-0.9)
        #sleep(2)
        limb.move_to_joint_positions(rightArmSidePose)
        #sleep(5)
        soundhandle.say('May I have a bag, please?')
        #soundhandle.playWave('/home/turtlebot/Desktop/baxter_aug_event/can_I_have_a_bag_please.wav')
        #sleep(2)
        #waits until the button on the robot is pressed, just in case
      while ((not rospy.is_shutdown()) and (b.state==0)):
        print '.'
        r.sleep()

      if (not rospy.is_shutdown()):
        print 'bye'
        baxter_interface.Head().set_pan(0.0)
        #sleep(2)
        limb.move_to_joint_positions(rightArmFrontOfferingPose)
        #sleep(5)
        soundhandle.say('There you go, have a good day!')
        #soundhandle.playWave('/home/turtlebot/Desktop/baxter_aug_event/there_you_go.wav')
        sleep(5)
        #while (b.state==0):
        #  print '.'
        #  r.sleep()

      if (not rospy.is_shutdown()):
        print 'back to waiting'
        limb.move_to_joint_positions(rightArmNeutralPose)
        sleep(5)
        pub.publish(neutralFace)
        #write table we have finished
        f=open('/home/turtlebot/messagesFromTable','w')
        s=f.write('0')
        f.close()
        s = '0'
        sleep(1)
    '''
    if (rospy.is_shutdown()):
      print 'ros has been shut down. bye!'      


if __name__ == '__main__':
    rospy.init_node('baxter-icecream', anonymous = True)

    print '---------------------'
    print '-Baxter ice cream    -'
    print '-  Jan 2017, HH  -'
    print '---------------------'

    mainLoop()
    #try:
    #  mainLoop()
    #except KeyboardInterrupt:
    #  sys.exit()



