import numpy as np
import cv2

cap = cv2.VideoCapture(0)
firstFrame= None
MIN_AREA=5000
totalContourSum=0
contourSum_lessNoise=0
while(True):
	# Capture frame-by-frame
	ret, frame = cap.read()

	if not ret:
		break

	# Our operations on the frame come here
	gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
	gray=cv2.GaussianBlur(gray, (21,21), 0)

	if firstFrame is None:
		firstFrame = gray
		continue

	frameDelta=cv2.absdiff(firstFrame, gray)
	thresh= cv2.threshold(frameDelta, 25, 255, cv2.THRESH_BINARY)[1]
	
	thresh= cv2.dilate(thresh, None, iterations=2)
	(cnts, _) = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

	totalContourSum=0
	contourSum_lessNoise=0
	for c in cnts:
		totalContourSum+= cv2.contourArea(c)
		if cv2.contourArea(c) < MIN_AREA:
			continue
		contourSum_lessNoise+= cv2.contourArea(c)
		#print cv2.contourArea(c)
		(x,y,w,h)= cv2.boundingRect(c)
		cv2.rectangle(frame, (x,y), (x+w, y+h), (0, 255, 0), 2)
		#text="Occupied"



	# Display the resulting frame
	cv2.imshow('frame',frame)
	cv2.imshow('thresh',thresh)
	keyPressed = cv2.waitKey(1)
	if keyPressed & 0xFF == ord('q'):
		break
	elif keyPressed & 0xFF == ord('r'):
		firstFrame = gray
	elif keyPressed & 0xFF == ord('s'):
		print contourSum_lessNoise #totalContourSum
# When everything done, release the capture
cap.release()
cv2.destroyAllWindows()
